name: loadtests-containers

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_DOCKERHUB: ${{ secrets.DOCKERHUB_USERNAME }}/siteconversordistancias-dotnet6
  ASPNETCORE_URLS: 'http://localhost:5000'
  DIR_WEBAPP: './ConversorDistancias'
  DIR_TESTS: './ConversorDistancias.Specs'
  PATH_REPORT_TESTS: './ConversorDistancias.Specs/Releases'
  WEBAPP_NAME: 'groffeconversordistancias'
  
jobs:

  build-tests-push:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build de imagem
      run: |
        cd ${{ env.DIR_WEBAPP }}
        docker build . --file Dockerfile --tag ${{ env.IMAGE_DOCKERHUB }}:latest      
    - name: Criar container para testes
      run: |
        docker run --name sitetests -p 1234:80 -d ${{ env.IMAGE_DOCKERHUB }}:latest
        docker container ls
    - name: Testes com Selenium WebDriver + Chrome Driver
      env:
        UrlConversaoDistancias: http://localhost:1234
      run: |
        cd ${{ env.DIR_TESTS }}
        dotnet test -c Release -o Releases
    - name: Instalar o LivingDoc (SpecFlow)
      if: always()
      run: dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
    - name: Gerar relatório HTML com o resultado dos testes usando o LivingDoc (SpecFlow)
      if: always()
      run: |
        cd ${{ env.PATH_REPORT_TESTS }}
        livingdoc test-assembly Temperatura.Specs.dll --project-language pt-BR -t TestExecution.json
    #- name: Upload do Report de Testes como Artifact
    #  uses: actions/upload-artifact@v2.3.1
    #  if: always()
    #  with:
    #    name: resultado-execucao-testes
    #    path: ${{ env.PATH_REPORT_TESTS }}
    #    retention-days: 30

    #- name: Executar testes de carga com k6
    #  run: k6 run ${{ env.TEST_SCRIPTS }}
    #- name: Listar arquivo gerado após execução dos testes
    #  if: always()
    #  run: ls
    #- name: Upload do Report de Testes como Artifact
    #  uses: actions/upload-artifact@v2.3.1
    #  if: always()
    #  with:
    #    name: resultado-execucao-testes
    #    path: ${{ env.PATH_REPORT_TESTS }}
    #    retention-days: 30
    #- name: Login no Docker Hub
    #  uses: docker/login-action@v1.12.0
    #  with:
    #    username: ${{ secrets.DOCKERHUB_USERNAME }}
    #    password: ${{ secrets.DOCKERHUB_PASSWORD }}
    #- name: Geração de tag com número do Build e Push no Docker Hub
    #  run: |
    #    docker tag ${{ env.IMAGE_DOCKERHUB }}:latest ${{ env.IMAGE_DOCKERHUB }}:$GITHUB_RUN_NUMBER
    #    docker push --all-tags ${{ env.IMAGE_DOCKERHUB }}
